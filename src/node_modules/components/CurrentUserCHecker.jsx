import useFetch from "hooks/useFetch";
import { useEffect, useContext } from "react";
import { CurrentUserContext } from "contexts/currentUser";
import useLocalStorage from "hooks/useLocalStorage";

const CurrentUserChecker = ({ children }) => {
  const [state, setCurrentUserState] = useContext(CurrentUserContext);
  const [{ response }, doFetch] = useFetch("/user");
  const [token] = useLocalStorage("token");

  useEffect(() => {
    if (token === "false") {
      setCurrentUserState((state) => ({
        ...state,
        isLoggedIn: false,
      }));

      return;
    }
    doFetch();
    setCurrentUserState((state) => ({
      ...state,
      isLoading: true,
    }));
  }, []);

  useEffect(() => {
    if (!response) {
      return;
    }

    setCurrentUserState((state) => ({
      ...state,
      isLoggedIn: true,
      isLoading: false,
      currentUser: response.user,
    }));
  });

  return children;
};

export default CurrentUserChecker;
