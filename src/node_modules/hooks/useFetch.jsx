import { useState, useEffect } from "react";
import axios from "axios";

import useLocalStorage from "hooks/useLocalStorage";

export default (url) => {
  const baseUrl = "http://localhost:3000/api";
  const [isLoading, setIsloading] = useState(false);
  const [response, setResponse] = useState(null);
  const [error, setError] = useState(null);
  const [options, setOptions] = useState({});
  const [token] = useLocalStorage("token");

  const doFetch = (options = {}) => {
    setOptions(options);
    setIsloading(true);
  };

  useEffect(() => {
    if (!isLoading) {
      return;
    }

    const requestOptions = {
      ...options,
      ...{
        headers: {
          authorization: token ? `Token ${token}` : "",
        },
      },
    };

    axios(baseUrl + url, requestOptions)
      .then((res) => {
        console.log("res", res);
        setResponse(res.data);
        setIsloading(false);
      })
      .catch((error) => {
        console.log("err", error);
        setError(error.response.data);
        setIsloading(false);
      });
  }, [isLoading, url, options]);

  return [{ isLoading, response, error }, doFetch];
};
